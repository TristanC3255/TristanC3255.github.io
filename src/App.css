/* Navigation */
.main-nav { display: flex; align-items: center; }

.nav-link{
  position: relative;
  display: inline-block;
  margin: 0;
  padding: 0;
  font-weight: 600;
  color: var(--text-color);
  line-height: 1.2;
  opacity: .85;
}
.nav-link:hover{ opacity: 1; }
.nav-link + .nav-link{ margin-left: 1.5rem; }
.nav-link + .nav-link::before{
  content: "";
  position: absolute;
  left: -0.85rem;
  top: 50%;
  transform: translateY(-50%);
  width: 1px;
  height: 1em;
  background: #9aa0a6;
  opacity: .6;
}
.nav-link.active::after{
  content: "";
  position: absolute;
  left: 0; right: 0;
  bottom: -6px;
  height: 2px;
  background: #1a73e8;
  border-radius: 2px;
}


body {
  margin: 0;
  padding: 0;
  font-family: 'Helvetica Neue', sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  line-height: 1.6;
}

.container{
  width: min(1100px, 94vw);
  margin-left: clamp(1.25rem, 6vw, 6rem);
  margin-right: auto;
  padding-block: 2rem;
  padding-top: 0.2rem; /* keep existing small top padding */
}

/* Tighter section spacing */
section{
  margin-block: clamp(0.75rem, 2.5vw, 1.5rem);
}

header { text-align: center; margin-bottom: 0.9rem; }
header h1 { font-size: 2.1rem; margin-bottom: 0.15rem; }

h2{
  font-size: clamp(1rem, 1.05rem + .4vw, 1.25rem);
  margin: 0 0 0.35rem 0;
  padding-bottom: 0.25rem;
  border-bottom: 1px solid #eee;
}

nav a {
  margin: 0 10px;
  text-decoration: none;
  color: var(--text-color);
  font-weight: bold;
}

nav a:hover { text-decoration: underline; }

footer {
  text-align: center;
  padding: 1rem;
  margin-top: 2rem;
  font-size: 0.9rem;
  color: var(--text-color);
}

.site-header {
  padding: 0.6rem 1.25rem 0.2rem;
  border-bottom: 1px solid rgba(0,0,0,.06);
}

.container > section:first-of-type { margin-top: 0; }
.container > section:first-of-type h2 { margin-top: 0.15rem; }

/* Page/route transition helpers (must be top-level, not nested) */
.page-enter {
  opacity: 0;
  transform: translateY(6px);
}
.page-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 260ms ease-out, transform 260ms ease-out;
}
.page-exit {
  opacity: 1;
}
.page-exit-active {
  opacity: 0;
  transform: translateY(-6px);
  transition: opacity 200ms ease-in, transform 200ms ease-in;
}

/* Simple mount animation for the .page wrapper (works without react-transition-group) */
/* NOTE: entry animation removed in favor of .page--mounted transition */

@media (prefers-reduced-motion: reduce) {
  .page, .page * { animation: none !important; transition: none !important; }
}

/* Animate between states using a mounted class for more reliable transitions */
.page {
  opacity: 0;
  transform: translateY(6px);
  transition: opacity 260ms ease-out, transform 260ms ease-out;
}
.page--mounted {
  opacity: 1;
  transform: translateY(0);
}

/* Exit state applied before navigation to allow outgoing animation */
.page--exiting {
  opacity: 0;
  transform: translateY(-6px);
  transition: opacity 200ms ease-in, transform 200ms ease-in;
}